{
	"info": {
		"_postman_id": "649ecb27-281a-4a11-9b61-b3fd0b59783c",
		"name": "FlaskStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"12345\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Access Token is set\"] = jsonData.access_token != undefined;\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"12345\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "/items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/items",
					"host": [
						"{{url}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Price is returned\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.price).to.eql(20.0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"price\": 20.00\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/item/stamina-potion",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"stamina-potion"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/item/stamina-potion",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"stamina-potion"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/item/stamina-potion",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"stamina-potion"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"price\": 150.00\r\n}"
				},
				"url": {
					"raw": "{{url}}/item/legendary-stamina-potion",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"legendary-stamina-potion"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var url = pm.environment.get('url');",
					"var username = pm.environment.get('auth_name');",
					"var password = pm.environment.get('auth_password');",
					"",
					"",
					"const createUser = {       ",
					"    url: url + '/register',",
					"    method: 'POST',",
					"    header: 'Content-Type:application/json',",
					"    body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify({ \"username\": username, \"password\": password})",
					"    }",
					"};",
					"",
					"",
					"pm.sendRequest(createUser, (err, response) => {",
					"   console.log(\"User created if not exists\");",
					"});",
					"",
					"const getTokenRequest = {       ",
					"    url: url + '/auth',",
					"    method: 'POST',",
					"    header: 'Content-Type:application/json',",
					"    body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify({ \"username\": username, \"password\": password})",
					"    }",
					"};",
					"",
					"",
					"pm.sendRequest(getTokenRequest, (err, response) => {",
					"    const jsonData = response.json();",
					"    //   console.log(jsonData);",
					"    const newAccessToken = jsonData['access_token'];",
					"    //   console.log(newAccessToken);",
					"",
					"    pm.variables.set('token', newAccessToken);",
					"});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}